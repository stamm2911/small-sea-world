{"version":3,"sources":["utils/GridContext.js","img/sea-draw2.jpg","components/Grid.js","components/Button.js","components/ControlPanel.js","App.js","reportWebVitals.js","index.js"],"names":["GridContext","createContext","useGridContext","useContext","GridProvider","children","useState","gridState","setGridState","landState","setlandState","islasTotalesState","setIslasTotalesState","splitIslandState","setSplitIslandState","totalIslandArrayState","setTotalIslandArrayState","islandCount","cellValue","rowIndex","coloumnIndex","land","matrix","totalIslandArray","neighbourCellsArray","splitIslandStateArr","splice","indexOf","push","convertCells","console","log","length","index","smallestNeighbour","Math","min","every","item","neighbourCellsArrayFiltered","filter","totalIslandArrayFiltered","includes","Provider","value","addColumn","forEach","columnCell","removeColumn","pop","addRow","map","rowCell","removeRow","toggled","styles","sea","backgroundImage","cursor","background","none","Grid","style","uuidv4","onClick","Button","action","icon","className","ControlPanel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd8bd823.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst GridContext = createContext();\r\n\r\nexport const useGridContext = () => useContext(GridContext);\r\n\r\nexport const GridProvider = ({ children }) => {\r\n  const [gridState, setGridState] = useState([\r\n    [false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false],\r\n  ]);\r\n  const [landState, setlandState] = useState(0);\r\n  const [islasTotalesState, setIslasTotalesState] = useState(0);\r\n  const [splitIslandState, setSplitIslandState] = useState(101);\r\n  const [totalIslandArrayState, setTotalIslandArrayState] = useState([]);\r\n\r\n  function islandCount(cellValue, rowIndex, coloumnIndex, land) {\r\n    const matrix = [...gridState];\r\n    const totalIslandArray = [...totalIslandArrayState];\r\n    const neighbourCellsArray = [];\r\n\r\n    if (!cellValue) {\r\n      if (\r\n        !matrix[rowIndex][coloumnIndex - 1] &&\r\n        !matrix[rowIndex - 1][coloumnIndex] &&\r\n        !matrix[rowIndex][coloumnIndex + 1] &&\r\n        !matrix[rowIndex + 1][coloumnIndex]\r\n      ) {\r\n        matrix[rowIndex][coloumnIndex] = land;\r\n        totalIslandArray.push(land);\r\n      } else {\r\n        if (matrix[rowIndex][coloumnIndex - 1]) {\r\n          neighbourCellsArray.push(matrix[rowIndex][coloumnIndex - 1]);\r\n        }\r\n        if (matrix[rowIndex - 1][coloumnIndex]) {\r\n          neighbourCellsArray.push(matrix[rowIndex - 1][coloumnIndex]);\r\n        }\r\n        if (matrix[rowIndex][coloumnIndex + 1]) {\r\n          neighbourCellsArray.push(matrix[rowIndex][coloumnIndex + 1]);\r\n        }\r\n        if (matrix[rowIndex + 1][coloumnIndex]) {\r\n          neighbourCellsArray.push(matrix[rowIndex + 1][coloumnIndex]);\r\n        }\r\n        var smallestNeighbour = Math.min(...neighbourCellsArray);\r\n\r\n        matrix[rowIndex][coloumnIndex] = smallestNeighbour;\r\n\r\n        if (\r\n          matrix[rowIndex][coloumnIndex - 1] &&\r\n          matrix[rowIndex][coloumnIndex - 1] !== smallestNeighbour\r\n        ) {\r\n          matrix[rowIndex][coloumnIndex - 1] = matrix[rowIndex][coloumnIndex];\r\n          islandCount(false, rowIndex, coloumnIndex - 1, land);\r\n        }\r\n        if (\r\n          matrix[rowIndex - 1][coloumnIndex] &&\r\n          matrix[rowIndex - 1][coloumnIndex] !== smallestNeighbour\r\n        ) {\r\n          matrix[rowIndex - 1][coloumnIndex] = matrix[rowIndex][coloumnIndex];\r\n          islandCount(false, rowIndex - 1, coloumnIndex, land);\r\n        }\r\n        if (\r\n          matrix[rowIndex][coloumnIndex + 1] &&\r\n          matrix[rowIndex][coloumnIndex + 1] !== smallestNeighbour\r\n        ) {\r\n          matrix[rowIndex][coloumnIndex + 1] = matrix[rowIndex][coloumnIndex];\r\n          islandCount(false, rowIndex, coloumnIndex + 1, land);\r\n        }\r\n        if (\r\n          matrix[rowIndex + 1][coloumnIndex] &&\r\n          matrix[rowIndex + 1][coloumnIndex] !== smallestNeighbour\r\n        ) {\r\n          matrix[rowIndex + 1][coloumnIndex] = matrix[rowIndex][coloumnIndex];\r\n          islandCount(false, rowIndex + 1, coloumnIndex, land);\r\n        }\r\n      }\r\n      if (\r\n        !neighbourCellsArray.every((item) => {\r\n          return item === neighbourCellsArray[0];\r\n        })\r\n      ) {\r\n        const neighbourCellsArrayFiltered = neighbourCellsArray.filter(\r\n          (item) => {\r\n            return item !== smallestNeighbour;\r\n          }\r\n        );\r\n\r\n        const totalIslandArrayFiltered =\r\n          totalIslandArray.length > 1\r\n            ? totalIslandArray.filter(\r\n                (item) => !neighbourCellsArrayFiltered.includes(item)\r\n              )\r\n            : totalIslandArray;\r\n\r\n        setTotalIslandArrayState(totalIslandArrayFiltered);\r\n        setIslasTotalesState(totalIslandArrayFiltered.length);\r\n      } else {\r\n        setTotalIslandArrayState(totalIslandArray);\r\n        setIslasTotalesState(totalIslandArray.length);\r\n      }\r\n    } else {\r\n      if (\r\n        !matrix[rowIndex][coloumnIndex - 1] &&\r\n        !matrix[rowIndex - 1][coloumnIndex] &&\r\n        !matrix[rowIndex][coloumnIndex + 1] &&\r\n        !matrix[rowIndex + 1][coloumnIndex]\r\n      ) {\r\n        const index = totalIslandArray.indexOf(cellValue);\r\n        totalIslandArray.splice(index, 1);\r\n        setTotalIslandArrayState(totalIslandArray);\r\n        setIslasTotalesState(totalIslandArray.length);\r\n      } else {\r\n        let splitIslandStateArr = splitIslandState;\r\n        totalIslandArray.splice(\r\n          totalIslandArray.indexOf(matrix[rowIndex][coloumnIndex]),\r\n          1\r\n        );\r\n\r\n        if (matrix[rowIndex][coloumnIndex - 1]) {\r\n          totalIslandArray.push(splitIslandStateArr);\r\n          convertCells(matrix, rowIndex, coloumnIndex - 1, splitIslandStateArr);\r\n        }\r\n\r\n        splitIslandStateArr++;\r\n\r\n        if (\r\n          matrix[rowIndex - 1][coloumnIndex] &&\r\n          matrix[rowIndex - 1][coloumnIndex] !==\r\n            matrix[rowIndex][coloumnIndex - 1]\r\n        ) {\r\n          console.log(\"102\", splitIslandStateArr);\r\n          totalIslandArray.push(splitIslandStateArr);\r\n          convertCells(matrix, rowIndex - 1, coloumnIndex, splitIslandStateArr);\r\n        }\r\n\r\n        splitIslandStateArr++;\r\n\r\n        if (\r\n          matrix[rowIndex][coloumnIndex + 1] &&\r\n          matrix[rowIndex][coloumnIndex + 1] !==\r\n            matrix[rowIndex][coloumnIndex - 1] &&\r\n          matrix[rowIndex][coloumnIndex + 1] !==\r\n            matrix[rowIndex - 1][coloumnIndex]\r\n        ) {\r\n          totalIslandArray.push(splitIslandStateArr);\r\n          convertCells(matrix, rowIndex, coloumnIndex + 1, splitIslandStateArr);\r\n        }\r\n\r\n        splitIslandStateArr++;\r\n\r\n        if (\r\n          matrix[rowIndex + 1][coloumnIndex] &&\r\n          matrix[rowIndex + 1][coloumnIndex] !==\r\n            matrix[rowIndex][coloumnIndex - 1] &&\r\n          matrix[rowIndex + 1][coloumnIndex] !==\r\n            matrix[rowIndex - 1][coloumnIndex] &&\r\n          matrix[rowIndex + 1][coloumnIndex] !==\r\n            matrix[rowIndex][coloumnIndex + 1]\r\n        ) {\r\n          totalIslandArray.push(splitIslandStateArr);\r\n          convertCells(matrix, rowIndex + 1, coloumnIndex, splitIslandStateArr);\r\n        }\r\n\r\n        splitIslandStateArr++;\r\n        setTotalIslandArrayState(totalIslandArray);\r\n        setIslasTotalesState(totalIslandArray.length);\r\n        setSplitIslandState(splitIslandStateArr);\r\n      }\r\n    }\r\n    setGridState(matrix);\r\n    return;\r\n  }\r\n\r\n  function convertCells(matrix, rowIndex, coloumnIndex, splitIslandStateArr) {\r\n    matrix[rowIndex][coloumnIndex] = splitIslandStateArr;\r\n\r\n    if (\r\n      matrix[rowIndex][coloumnIndex - 1] &&\r\n      matrix[rowIndex][coloumnIndex - 1] !== splitIslandStateArr\r\n    ) {\r\n      matrix[rowIndex][coloumnIndex - 1] = matrix[rowIndex][coloumnIndex];\r\n      convertCells(matrix, rowIndex, coloumnIndex - 1, splitIslandStateArr);\r\n    }\r\n\r\n    if (\r\n      matrix[rowIndex - 1][coloumnIndex] &&\r\n      matrix[rowIndex - 1][coloumnIndex] !== splitIslandStateArr\r\n    ) {\r\n      matrix[rowIndex - 1][coloumnIndex] = matrix[rowIndex][coloumnIndex];\r\n      convertCells(matrix, rowIndex - 1, coloumnIndex, splitIslandStateArr);\r\n    }\r\n\r\n    if (\r\n      matrix[rowIndex][coloumnIndex + 1] &&\r\n      matrix[rowIndex][coloumnIndex + 1] !== splitIslandStateArr\r\n    ) {\r\n      matrix[rowIndex][coloumnIndex + 1] = matrix[rowIndex][coloumnIndex];\r\n      convertCells(matrix, rowIndex, coloumnIndex + 1, splitIslandStateArr);\r\n    }\r\n\r\n    if (\r\n      matrix[rowIndex + 1][coloumnIndex] &&\r\n      matrix[rowIndex + 1][coloumnIndex] !== splitIslandStateArr\r\n    ) {\r\n      matrix[rowIndex + 1][coloumnIndex] = matrix[rowIndex][coloumnIndex];\r\n      convertCells(matrix, rowIndex + 1, coloumnIndex, splitIslandStateArr);\r\n    }\r\n  }\r\n\r\n  function toggled(cellValue, rowIndex, coloumnIndex) {\r\n    const matrix = [...gridState];\r\n    matrix[rowIndex][coloumnIndex] = !cellValue;\r\n    let land = landState;\r\n    cellValue ? land-- : land++;\r\n    setlandState(land);\r\n    islandCount(cellValue, rowIndex, coloumnIndex, land);\r\n  }\r\n\r\n  function addColumn() {\r\n    const matrix = [...gridState];\r\n    matrix.forEach((columnCell) => {\r\n      columnCell.push(false);\r\n    });\r\n    setGridState(matrix);\r\n  }\r\n\r\n  function removeColumn() {\r\n    const matrix = [...gridState];\r\n    if (matrix[0].length > 1) {\r\n      matrix.forEach((columnCell) => {\r\n        columnCell.pop();\r\n      });\r\n      setGridState(matrix);\r\n    }\r\n  }\r\n\r\n  function addRow() {\r\n    const matrix = [...gridState];\r\n    matrix.push(\r\n      matrix[0].map((rowCell) => {\r\n        return false;\r\n      })\r\n    );\r\n    setGridState(matrix);\r\n  }\r\n\r\n  function removeRow() {\r\n    const matrix = [...gridState];\r\n    if (matrix.length > 3) {\r\n      matrix.pop();\r\n      setGridState(matrix);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GridContext.Provider\r\n      value={{\r\n        gridState,\r\n        addColumn,\r\n        removeColumn,\r\n        addRow,\r\n        removeRow,\r\n        toggled,\r\n        islasTotalesState,\r\n        landState,\r\n      }}\r\n    >\r\n      {children}\r\n    </GridContext.Provider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/sea-draw2.5c7b8966.jpg\";","import { useGridContext } from \"../utils/GridContext\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport sea from \"../img/sea-draw2.jpg\";\r\n\r\nconst styles = {\r\n  sea: {\r\n    backgroundImage: `url(${sea})`,\r\n    cursor: 'pointer'\r\n\r\n  },\r\n  land: {\r\n    background: \"green\",\r\n    cursor: 'pointer'\r\n\r\n  },\r\n  none: {\r\n    background: \"gray\",\r\n  },\r\n};\r\n\r\nfunction Grid() {\r\n  const { gridState, toggled } = useGridContext();\r\n  return (\r\n    <main>\r\n      <table>\r\n        <tbody>\r\n          {gridState.map((rowCell, rowIndex) => {\r\n            return (\r\n              <tr key={uuidv4()}>\r\n                {rowCell.map((columnCell, coloumnIndex) => {\r\n                  return (\r\n                    rowIndex === 0 || rowIndex === gridState.length-1?\r\n                    <td\r\n                      key={uuidv4()}\r\n                      style={styles.none}\r\n                    >x</td> :\r\n                    <td\r\n                      key={uuidv4()}\r\n                      onClick={() =>\r\n                        toggled(columnCell, rowIndex, coloumnIndex)\r\n                      }\r\n                      style={columnCell ? styles.land : styles.sea}\r\n                    >x</td> \r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","function Button({ action, icon }) {\r\n  return (\r\n    <button className=\"waves-effect waves-light btn indigo\" onClick={action}>\r\n      <i className=\"material-icons left\">{icon}</i>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import { useGridContext } from \"../utils/GridContext\";\r\nimport Button from \"./Button\";\r\n\r\nfunction ControlPanel() {\r\n  const { addColumn, removeColumn, addRow, removeRow, islasTotalesState, landState } =\r\n    useGridContext();\r\n\r\n  return (\r\n    <header>\r\n      <section>\r\n        <h1>Small Sea World</h1>\r\n        <div className=\"btn-container\">\r\n          <Button action={removeRow} icon={\"remove\"} />\r\n          <h2>Height</h2>\r\n          <Button action={addRow} icon={\"add\"} />\r\n          <Button action={removeColumn} icon={\"remove\"} />\r\n          <h2>Width</h2>\r\n          <Button action={addColumn} icon={\"add\"} />\r\n        </div>\r\n      </section>\r\n      <aside>\r\n        <h2><u>Data:</u></h2>\r\n        <ul>\r\n          <li>- Land Cells: {landState}</li>\r\n          <li>- Total Islands: {islasTotalesState}</li>\r\n        </ul>\r\n      </aside>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import Grid from \"./components/Grid\";\nimport ControlPanel from \"./components/ControlPanel\";\nimport { GridProvider } from \"./utils/GridContext\";\n\nfunction App() {\n  return (\n    <div>\n      <GridProvider>\n        <ControlPanel />\n        <Grid />\n      </GridProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './reset.css';\r\nimport './style.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}