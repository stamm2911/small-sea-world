{"version":3,"sources":["utils/GridContext.js","img/sea-draw2.jpg","components/Grid.js","components/Button.js","components/ControlPanel.js","App.js","reportWebVitals.js","index.js"],"names":["GridContext","createContext","useGridContext","useContext","GridProvider","children","useState","gridState","setGridState","islasTotalesState","setIslasTotalesState","landState","setlandState","islandTotalCount","useEffect","equivalency","islasTotalesState2","matrix","forEach","rowCell","rowIndex","columnCell","coloumnIndex","push","reverse","i","length","console","log","row","cell","uniq","Set","Provider","value","addColumn","removeColumn","pop","addRow","map","removeRow","toggled","cellValue","land","styles","sea","backgroundImage","background","Grid","onClick","style","uuidv4","Button","action","icon","className","ControlPanel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAEMA,EAAcC,0BAEPC,EAAiB,kBAAMC,qBAAWH,IAElCI,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,EAAkCC,mBAAS,CACzC,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAChE,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAChE,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAChE,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAChE,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAChE,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAChE,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,KAPlE,mBAAOC,EAAP,KAAkBC,EAAlB,KASA,EAAkDF,mBAAS,GAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACIC,EAAmB,EA0IvB,OAzIAC,qBAEA,WACE,IAAIC,EAAc,GACdC,EAAqB,GACnBC,EAAM,YAAOV,GACnBU,EAAOC,SAAQ,SAACC,EAASC,GACvB,OAAOD,EAAQD,SAAQ,SAACG,EAAYC,GAC9BD,KAGE,IADFJ,EAAOG,GAA2B,IAAjBE,EAAqB,EAAIA,EAAe,KAEG,IAA5DL,EAAoB,IAAbG,EAAiB,EAAIA,EAAW,GAAGE,IAE1CL,EAAOG,GAAUE,GAAgBT,EACjCA,KAEAI,EAAOG,GAA2B,IAAjBE,EAAqB,EAAIA,EAAe,IACxC,IAAjBA,EAEAL,EAAOG,GAAUE,GACfL,EAAOG,GAA2B,IAAjBE,EAAqB,EAAIA,EAAe,GAE3DL,EAAoB,IAAbG,EAAiB,EAAIA,EAAW,GAAGE,IAC7B,IAAbF,EAEAH,EAAOG,GAAUE,GACfL,EAAoB,IAAbG,EAAiB,EAAIA,EAAW,GAAGE,IAE5CL,EAAOG,GAAUE,GAAgBT,EACjCA,KAIAI,EAAOG,GAA2B,IAAjBE,EAAqB,EAAIA,EAAe,IACzDL,EAAoB,IAAbG,EAAiB,EAAIA,EAAW,GAAGE,KAE1CL,EAAOG,GAAUE,GACfL,EAAOG,GAA2B,IAAjBE,EAAqB,EAAIA,EAAe,GACzDL,EAAoB,IAAbG,EAAiB,EAAIA,EAAW,GAAGE,GACtCL,EAAOG,GAA2B,IAAjBE,EAAqB,EAAIA,EAAe,GACzDL,EAAoB,IAAbG,EAAiB,EAAIA,EAAW,GAAGE,GAG9CL,EAAOG,GAA2B,IAAjBE,EAAqB,EAAIA,EAAe,KACzDL,EAAoB,IAAbG,EAAiB,EAAIA,EAAW,GAAGE,IAE1CP,EAAYQ,KAAK,CACfN,EAAOG,GAA2B,IAAjBE,EAAqB,EAAIA,EAAe,GACzDL,EAAoB,IAAbG,EAAiB,EAAIA,EAAW,GAAGE,GACtCL,EAAOG,GAA2B,IAAjBE,EAAqB,EAAIA,EAAe,GACzDL,EAAoB,IAAbG,EAAiB,EAAIA,EAAW,GAAGE,GAC9CL,EAAOG,GAA2B,IAAjBE,EAAqB,EAAIA,EAAe,GACzDL,EAAoB,IAAbG,EAAiB,EAAIA,EAAW,GAAGE,GACtCL,EAAOG,GAA2B,IAAjBE,EAAqB,EAAIA,EAAe,GACzDL,EAAoB,IAAbG,EAAiB,EAAIA,EAAW,GAAGE,aAO1DP,EAAcA,EAAYS,UAC1BP,EAAOC,SAAQ,SAACC,EAASC,GACvB,OAAOD,EAAQD,SAAQ,SAACG,EAAYC,GAClC,IAAK,IAAIG,EAAI,EAAGA,EAAIV,EAAYW,OAAQD,IAClCR,EAAOG,GAAUE,KAAkBP,EAAYU,GAAG,KACpDE,QAAQC,IAAI,MAAOb,GACnBY,QAAQC,IAAR,iBACYR,EADZ,aACyBE,EADzB,aAC0CD,GACxCN,EAAYU,IAEdR,EAAOG,GAAUE,GAAgBP,EAAYU,GAAG,GAChDE,QAAQC,IAAR,iBACYR,EADZ,aACyBE,EADzB,aAC0CL,EAAOG,GAAUE,YAMnEK,QAAQC,IAAIX,GACZA,EAAOC,SAAQ,SAACW,GACd,OAAOA,EAAIX,SAAQ,SAACY,GACdA,GAAMd,EAAmBO,KAAKO,SAGtC,IAAMC,EAAI,YAAO,IAAIC,IAAIhB,IACzBW,QAAQC,IAAI,qBAAsBG,GAClCJ,QAAQC,IAAI,iBAAkBG,EAAKL,QACnChB,EAAqBqB,EAAKL,UAzFL,CAACnB,EAAWM,IA0IjC,cAACb,EAAYiC,SAAb,CACEC,MAAO,CACL3B,YACA4B,UAxCN,WACE,IAAMlB,EAAM,YAAOV,GACnBU,EAAOC,SAAQ,SAACG,GACdA,EAAWE,MAAK,MAElBf,EAAaS,IAoCTmB,aAjCN,WACE,IAAMnB,EAAM,YAAOV,GACfU,EAAO,GAAGS,OAAS,IACrBT,EAAOC,SAAQ,SAACG,GACdA,EAAWgB,SAEb7B,EAAaS,KA4BXqB,OAxBN,WACE,IAAMrB,EAAM,YAAOV,GACnBU,EAAOM,KACLN,EAAO,GAAGsB,KAAI,SAACpB,GACb,OAAO,MAGXX,EAAaS,IAkBTuB,UAfN,WACE,IAAMvB,EAAM,YAAOV,GACfU,EAAOS,OAAS,IAClBT,EAAOoB,MACP7B,EAAaS,KAYXwB,QArDN,SAAiBC,EAAWtB,EAAUE,GACpC,IAAML,EAAM,YAAOV,GACfoC,EAAOhC,EACX+B,EAAYC,IAASA,IACrB/B,EAAa+B,GACb1B,EAAOG,GAAUE,IAAiBL,EAAOG,GAAUE,GACnDd,EAAaS,IAgDTR,oBACAE,aATJ,SAYGN,K,QCzKQ,MAA0B,sCCInCuC,EAAS,CACbC,IAAK,CACHC,gBAAgB,OAAD,OAASD,EAAT,MAEjBF,KAAM,CACJI,WAAY,UAiCDC,MA7Bf,WACE,MAA+B9C,IAAvBK,EAAR,EAAQA,UAAWkC,EAAnB,EAAmBA,QACnB,OACE,+BACE,gCACE,gCACGlC,EAAUgC,KAAI,SAACpB,EAASC,GACvB,OACE,6BACGD,EAAQoB,KAAI,SAAClB,EAAYC,GACxB,OACE,oBAEE2B,QAAS,kBACPR,EAAQpB,EAAYD,EAAUE,IAEhC4B,MAAO7B,EAAauB,EAAOD,KAAOC,EAAOC,KAJpCM,mBAJJA,yBCbRC,MARf,YAAmC,IAAjBC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KACxB,OACE,wBAAQC,UAAU,sCAAsCN,QAASI,EAAjE,SACE,mBAAGE,UAAU,sBAAb,SAAoCD,OC4B3BE,MA5Bf,WACE,MACEtD,IADMiC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcE,EAAjC,EAAiCA,OAAQE,EAAzC,EAAyCA,UAAW/B,EAApD,EAAoDA,kBAAmBE,EAAvE,EAAuEA,UAGvE,OACE,mCACE,oCACE,iDACA,sBAAK4C,UAAU,gBAAf,UACE,cAAC,EAAD,CAAQF,OAAQb,EAAWc,KAAM,WACjC,wCACA,cAAC,EAAD,CAAQD,OAAQf,EAAQgB,KAAM,QAC9B,cAAC,EAAD,CAAQD,OAAQjB,EAAckB,KAAM,WACpC,uCACA,cAAC,EAAD,CAAQD,OAAQlB,EAAWmB,KAAM,cAGrC,kCACE,6BAAI,wCACJ,+BACE,gDAAmB3C,KACnB,mDAAsBF,eCTjBgD,MAXf,WACE,OACE,8BACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,UCGOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5d82bc46.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nconst GridContext = createContext();\r\n\r\nexport const useGridContext = () => useContext(GridContext);\r\n\r\nexport const GridProvider = ({ children }) => {\r\n  const [gridState, setGridState] = useState([\r\n    [false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false, false],\r\n  ]);\r\n  const [islasTotalesState, setIslasTotalesState] = useState(0);\r\n  const [landState, setlandState] = useState(0);\r\n  var islandTotalCount = 1;\r\n  useEffect(islandCount, [gridState, islandTotalCount]);\r\n\r\n  function islandCount() {\r\n    let equivalency = [];\r\n    let islasTotalesState2 = [];\r\n    const matrix = [...gridState];\r\n    matrix.forEach((rowCell, rowIndex) => {\r\n      return rowCell.forEach((columnCell, coloumnIndex) => {\r\n        if (columnCell) {\r\n          if (\r\n            matrix[rowIndex][coloumnIndex === 0 ? 0 : coloumnIndex - 1] ===\r\n              false &&\r\n            matrix[rowIndex === 0 ? 0 : rowIndex - 1][coloumnIndex] === false\r\n          ) {\r\n            matrix[rowIndex][coloumnIndex] = islandTotalCount;\r\n            islandTotalCount++;\r\n          } else if (\r\n            matrix[rowIndex][coloumnIndex === 0 ? 0 : coloumnIndex - 1] &&\r\n            coloumnIndex !== 0\r\n          ) {\r\n            matrix[rowIndex][coloumnIndex] =\r\n              matrix[rowIndex][coloumnIndex === 0 ? 0 : coloumnIndex - 1];\r\n          } else if (\r\n            matrix[rowIndex === 0 ? 0 : rowIndex - 1][coloumnIndex] &&\r\n            rowIndex !== 0\r\n          ) {\r\n            matrix[rowIndex][coloumnIndex] =\r\n              matrix[rowIndex === 0 ? 0 : rowIndex - 1][coloumnIndex];\r\n          } else {\r\n            matrix[rowIndex][coloumnIndex] = islandTotalCount;\r\n            islandTotalCount++;\r\n          }\r\n\r\n          if (\r\n            matrix[rowIndex][coloumnIndex === 0 ? 0 : coloumnIndex - 1] &&\r\n            matrix[rowIndex === 0 ? 0 : rowIndex - 1][coloumnIndex]\r\n          ) {\r\n            matrix[rowIndex][coloumnIndex] =\r\n              matrix[rowIndex][coloumnIndex === 0 ? 0 : coloumnIndex - 1] <\r\n              matrix[rowIndex === 0 ? 0 : rowIndex - 1][coloumnIndex]\r\n                ? matrix[rowIndex][coloumnIndex === 0 ? 0 : coloumnIndex - 1]\r\n                : matrix[rowIndex === 0 ? 0 : rowIndex - 1][coloumnIndex];\r\n\r\n            if (\r\n              matrix[rowIndex][coloumnIndex === 0 ? 0 : coloumnIndex - 1] !==\r\n              matrix[rowIndex === 0 ? 0 : rowIndex - 1][coloumnIndex]\r\n            ) {\r\n              equivalency.push([\r\n                matrix[rowIndex][coloumnIndex === 0 ? 0 : coloumnIndex - 1] >\r\n                matrix[rowIndex === 0 ? 0 : rowIndex - 1][coloumnIndex]\r\n                  ? matrix[rowIndex][coloumnIndex === 0 ? 0 : coloumnIndex - 1]\r\n                  : matrix[rowIndex === 0 ? 0 : rowIndex - 1][coloumnIndex],\r\n                matrix[rowIndex][coloumnIndex === 0 ? 0 : coloumnIndex - 1] <\r\n                matrix[rowIndex === 0 ? 0 : rowIndex - 1][coloumnIndex]\r\n                  ? matrix[rowIndex][coloumnIndex === 0 ? 0 : coloumnIndex - 1]\r\n                  : matrix[rowIndex === 0 ? 0 : rowIndex - 1][coloumnIndex],\r\n              ]);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n    equivalency = equivalency.reverse();\r\n    matrix.forEach((rowCell, rowIndex) => {\r\n      return rowCell.forEach((columnCell, coloumnIndex) => {\r\n        for (let i = 0; i < equivalency.length; i++) {\r\n          if (matrix[rowIndex][coloumnIndex] === equivalency[i][0]) {\r\n            console.log(\"eq:\", equivalency);\r\n            console.log(\r\n              `matrix[${rowIndex}][${coloumnIndex}]=${columnCell}`,\r\n              equivalency[i]\r\n            );\r\n            matrix[rowIndex][coloumnIndex] = equivalency[i][1];\r\n            console.log(\r\n              `matrix[${rowIndex}][${coloumnIndex}]=${matrix[rowIndex][coloumnIndex]}`\r\n            );\r\n          }\r\n        }\r\n      });\r\n    });\r\n    console.log(matrix);\r\n    matrix.forEach((row) => {\r\n      return row.forEach((cell) => {\r\n        if (cell) islasTotalesState2.push(cell);\r\n      });\r\n    });\r\n    const uniq = [...new Set(islasTotalesState2)];\r\n    console.log(\"islasTotalesState2\", uniq);\r\n    console.log(\"islandiassssss\", uniq.length);\r\n    setIslasTotalesState(uniq.length);\r\n  }\r\n\r\n  function toggled(cellValue, rowIndex, coloumnIndex) {\r\n    const matrix = [...gridState];\r\n    let land = landState;\r\n    cellValue ? land-- : land++;\r\n    setlandState(land);\r\n    matrix[rowIndex][coloumnIndex] = !matrix[rowIndex][coloumnIndex];\r\n    setGridState(matrix);\r\n  }\r\n\r\n  function addColumn() {\r\n    const matrix = [...gridState];\r\n    matrix.forEach((columnCell) => {\r\n      columnCell.push(false);\r\n    });\r\n    setGridState(matrix);\r\n  }\r\n\r\n  function removeColumn() {\r\n    const matrix = [...gridState];\r\n    if (matrix[0].length > 1) {\r\n      matrix.forEach((columnCell) => {\r\n        columnCell.pop();\r\n      });\r\n      setGridState(matrix);\r\n    }\r\n  }\r\n\r\n  function addRow() {\r\n    const matrix = [...gridState];\r\n    matrix.push(\r\n      matrix[0].map((rowCell) => {\r\n        return false;\r\n      })\r\n    );\r\n    setGridState(matrix);\r\n  }\r\n\r\n  function removeRow() {\r\n    const matrix = [...gridState];\r\n    if (matrix.length > 1) {\r\n      matrix.pop();\r\n      setGridState(matrix);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GridContext.Provider\r\n      value={{\r\n        gridState,\r\n        addColumn,\r\n        removeColumn,\r\n        addRow,\r\n        removeRow,\r\n        toggled,\r\n        islasTotalesState,\r\n        landState,\r\n      }}\r\n    >\r\n      {children}\r\n    </GridContext.Provider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/sea-draw2.5c7b8966.jpg\";","import { useGridContext } from \"../utils/GridContext\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport sea from \"../img/sea-draw2.jpg\";\r\n\r\nconst styles = {\r\n  sea: {\r\n    backgroundImage: `url(${sea})`,\r\n  },\r\n  land: {\r\n    background: \"green\",\r\n  },\r\n};\r\n\r\nfunction Grid() {\r\n  const { gridState, toggled } = useGridContext();\r\n  return (\r\n    <main>\r\n      <table>\r\n        <tbody>\r\n          {gridState.map((rowCell, rowIndex) => {\r\n            return (\r\n              <tr key={uuidv4()}>\r\n                {rowCell.map((columnCell, coloumnIndex) => {\r\n                  return (\r\n                    <td\r\n                      key={uuidv4()}\r\n                      onClick={() =>\r\n                        toggled(columnCell, rowIndex, coloumnIndex)\r\n                      }\r\n                      style={columnCell ? styles.land : styles.sea}\r\n                    ></td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","function Button({ action, icon }) {\r\n  return (\r\n    <button className=\"waves-effect waves-light btn indigo\" onClick={action}>\r\n      <i className=\"material-icons left\">{icon}</i>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import { useGridContext } from \"../utils/GridContext\";\r\nimport Button from \"./Button\";\r\n\r\nfunction ControlPanel() {\r\n  const { addColumn, removeColumn, addRow, removeRow, islasTotalesState, landState } =\r\n    useGridContext();\r\n\r\n  return (\r\n    <header>\r\n      <section>\r\n        <h1>Small Sea World</h1>\r\n        <div className=\"btn-container\">\r\n          <Button action={removeRow} icon={\"remove\"} />\r\n          <h2>Height</h2>\r\n          <Button action={addRow} icon={\"add\"} />\r\n          <Button action={removeColumn} icon={\"remove\"} />\r\n          <h2>Width</h2>\r\n          <Button action={addColumn} icon={\"add\"} />\r\n        </div>\r\n      </section>\r\n      <aside>\r\n        <h2><u>Data:</u></h2>\r\n        <ul>\r\n          <li>- Land Cells: {landState}</li>\r\n          <li>- Total Islands: {islasTotalesState}</li>\r\n        </ul>\r\n      </aside>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import Grid from \"./components/Grid\";\nimport ControlPanel from \"./components/ControlPanel\";\nimport { GridProvider } from \"./utils/GridContext\";\n\nfunction App() {\n  return (\n    <div>\n      <GridProvider>\n        <ControlPanel />\n        <Grid />\n      </GridProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './reset.css';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}